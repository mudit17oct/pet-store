{"version":3,"sources":["Carousel.js","Modal.js","Details.js"],"names":["Carousel","state","photos","active","handleIndexclick","event","setState","target","dataset","index","React","Component","value","map","photo","media","filter","Modal","props","el","document","createElement","modalRoot","getElementById","appendChild","removeChild","children","Details","petfinder","key","secret","loading","showModal","toggleModal","pet","get","output","id","then","data","breed","Array","isArray","breeds","join","name","animal","location","contact","city","description","catch"],"mappings":"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","file":"Details.d3f404cb.map","sourceRoot":"..\\src","sourcesContent":["import React from \"react\";\r\n\r\nclass Carousel extends React.Component {\r\n  state = {\r\n    photos: [],\r\n    active: 0\r\n  };\r\n  static getDerivedStateFromProps({ media }) {\r\n    let photos = [];\r\n    if (media && media.photos && media.photos.photo) {\r\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\r\n    }\r\n\r\n    return { photos };\r\n  }\r\n  handleIndexclick = event => {\r\n    this.setState({\r\n      active: +event.target.dataset.index\r\n    });\r\n  };\r\n  render() {\r\n    const photos = this.state.photos;\r\n    const active = this.state.active;\r\n\r\n    return (\r\n      <div className=\"carousel\">\r\n        <img src={photos[active].value} alt=\"animal\" />\r\n        <div className=\"carousel-smaller\">\r\n          {photos.map((photo, index) => {\r\n            /* eslint-disable-next-line */\r\n            return (\r\n              <img\r\n                onClick={this.handleIndexclick}\r\n                key={photo.value}\r\n                data-index={index}\r\n                src={photo.value}\r\n                className={index === active ? \"active\" : \"\"}\r\n                alt=\"animal thumbnail\"\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carousel;\r\n","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\n//const modalRoot = document.getElementById(\"modal\");\r\nclass Modal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //this.el = document.createElement(\"div\");\r\n  }\r\n  componentDidMount() {\r\n    this.el = document.createElement(\"div\");\r\n    this.modalRoot = document.getElementById(\"modal\");\r\n    this.modalRoot.appendChild(this.el);\r\n  }\r\n  componentWillUnmount() {\r\n    modalRoot.removeChild(this.el);\r\n  }\r\n  render() {\r\n    return createPortal(this.props.children, this.el);\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport pf from \"petfinder-client\";\r\nimport { navigate } from \"@reach/router\";\r\nimport Carousel from \"./Carousel\";\r\nimport Modal from \"./Modal\";\r\nconst petfinder = pf({\r\n  key: process.env.API_KEY,\r\n  secret: process.env.API_SECRET\r\n});\r\n\r\nclass Details extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    showModal: true\r\n  };\r\n  componentWillMount() {\r\n    petfinder.pet\r\n      .get({\r\n        output: \"full\",\r\n        id: this.props.id\r\n      })\r\n      .then(data => {\r\n        let breed;\r\n        const pet = data.petfinder.pet;\r\n        if (Array.isArray(pet.breeds.breed)) {\r\n          breed = pet.breeds.breed.join(\", \");\r\n        } else {\r\n          breed = pet.breeds.breed;\r\n        }\r\n        //alert(\"name\" + this.props.name);\r\n        //alert(\"id\" + this.props.id);\r\n        this.setState({\r\n          name: pet.name,\r\n          animal: pet.animal,\r\n          location: `${pet.contact.city},${pet.contact.state}`,\r\n          description: pet.description,\r\n          breed,\r\n          loading: false,\r\n          media: pet.media\r\n        });\r\n      })\r\n      .catch(() => {\r\n        navigate(\"/\");\r\n      });\r\n  }\r\n  toggleModal = () => this.setState({ showModal: !this.state.showModal });\r\n  render() {\r\n    if (this.state.loading) return <h1>Loading</h1>;\r\n    const {\r\n      name,\r\n      animal,\r\n      breed,\r\n      location,\r\n      description,\r\n      media,\r\n      showModal\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"details\">\r\n        <Carousel media={media} />\r\n        <h1>\r\n          {name}-{animal}-{breed}\r\n        </h1>\r\n        <button onClick={this.toggleModal}>Adopt {name}</button>\r\n        <p>{description}</p>\r\n        {showModal ? (\r\n          <Modal>\r\n            <h1>Would you like to adopt {name}?</h1>\r\n            <div className=\"buttons\">\r\n              <button onClick={this.toggleModal}>Yes</button>\r\n              <button onClick={this.toggleModal}>No</button>\r\n            </div>\r\n          </Modal>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Details;\r\n"]}